
on_actions = {
	on_daily = {
		effect = {
			if = {
				limit = { has_variable = coalition_partners^num }
				set_variable = { coalition_stab_gain = 0 }
				for_each_loop = {
					array = coalition_partners
					add_to_variable = { coalition_stab_gain = party_popularity@var:v }
				}
				multiply_variable = { coalition_stab_gain = 0.15 }
			}
		}
	}
	on_leave_faction = {
		effect = {
			if = {
				limit = {
					has_completed_focus = BAC_COC_sekrit_war_committee
					has_game_rule = {
						rule = allow_faction
						option = BLOCKED
					}
				}
				country_event = {
					id = bacutility.1
					hours = 1
				}
			}
		}
	}

	# ROOT is capitulated country, FROM is winner
	# This is processed by the game DURING peace conference
	# If you have any effects that annex/change state ownership, DO NOT put them here
	# as that will crash the peace conference
	on_capitulation = {
		effect = {
			if = {
				limit = {
					is_in_faction_with = event_target:bac_commonalty_target
					is_faction_leader = yes
					event_target:bac_commonalty_target = {
						exists = yes
						has_capitulated = no
						NOT = {
							any_owned_state = {
								OR = {
									is_controlled_by = FROM
									CONTROLLER = {
										is_ally_with = FROM
									}
								}
							}
						}
						has_war_with = FROM
					}
				}
				event_target:bac_commonalty_target = {
					leave_faction = yes
					if = {
						limit = { has_war_with = FROM }
						set_country_flag = { flag = bypass_on_peaceconference_ended days = 1 value = 1 }
						white_peace = FROM
						remove_wargoal = {
							type = all
							target = FROM
						}
					}
					if = {
						limit = { has_country_flag = BAC_COC_alliance_member }
						create_faction = BAC_commonalty_faction
						every_other_country = {
							limit = {
								OR = {
									has_country_flag = BAC_COC_alliance_member
									is_subject_of = COC
								}
							}
							COC = {add_to_faction = PREV}
						}
						every_other_country = {
							limit = {
								OR = {
									has_country_flag = BAC_COC_alliance_member
									is_subject_of = event_target:bac_commonalty_target
									AND = {
										is_in_faction_with = event_target:bac_commonalty_target
										NOT = {
											is_in_faction_with = ROOT
										}
									}
								}
								has_war_with = FROM
							}
							set_country_flag = { flag = bypass_on_peaceconference_ended days = 1 value = 1 }
							white_peace = FROM
						}
					}
				}
			}
		}
	}

	#### MIO on actions
	# ROOT is fucking MIO ##FROM is fucking nationality
	on_mio_size_increased = {
		effect = {
			log = "[GetDateText]: ROOT: [Root.GetName] FROM: [From.GetName] on_mio_size_increased"
			if = {
				limit = {
					FROM = {
						original_tag = KIC
						has_country_flag = BAC_get_commonalty_flag
					}
				}
				if = {
					limit = {
						has_mio_flag = cocc_cot_mio_flag
					}
					FROM = { bac_COT_small_effect = yes }
				}
				else_if = {
					limit = {
						has_mio_flag = cocc_wpu_mio_flag
					}
					FROM = { bac_WPU_small_effect = yes }
				}
			}
		}
	}
	# NB : all the following also exist at MIO level
	# use on-action here if the purpose is to execute for any MIO
	# use on-action at MIO level to execute just for one precise MIO
	# i.e. don't use this here : if = { limit = { is_military_industrial_organisation = ... } }
	# on_mio_design_team_assigned_to_tech = {}
	# on_mio_design_team_assigned_to_variant = {}
	# on_mio_industrial_manufacturer_assigned = {}
	# on_mio_tech_research_cancelled = {}
	# on_mio_tech_research_completed = {}
	# on_mio_industrial_manufacturer_unassigned = {}
}