
#Scope is triggered unit leader
COC_Champion_add_WarHero_trait = {
    ROOT = { 
		if = {
			limit = { NOT = { has_trait = war_hero } }
			if = {
				limit = {
					OR = {
						has_trait = media_personality
						has_trait = navy_media_personality
					}
				}
				add_unit_leader_trait = war_hero
			}
			else = {
				if = {
					limit = { is_army_leader = yes }
					add_unit_leader_trait = media_personality
				}
				else_if = {
					limit = { is_navy_leader = yes }
					add_unit_leader_trait = navy_media_personality
				}
			}
		}
		else_if = {
			limit = { 
				NOT = { EQS = { has_country_flag = assigned_War_Hero_general } }
				is_army_leader = yes
				is_hired_as_advisor = yes
			}
			if = {
				limit = { is_character_slot = political_advisor }
				add_trait = {
					slot = political_advisor
					trait = war_hero_general
				}
			}
			else_if = { 
				limit = { is_character_slot = high_chiand }
				add_trait = {
					slot = high_chiand
					trait = war_hero_general
				}
			}
			else_if = { 
				limit = { is_character_slot = army_chief }
				add_trait = {
					slot = army_chief
					trait = war_hero_general
				}
			}
			else_if = { 
				limit = { is_character_slot = theorist }
				add_trait = {
					slot = theorist
					trait = war_hero_general
				}
			}
			else = {
				add_trait = {
					slot = air_chief
					trait = war_hero_general
				}
			}
			EQS = { set_country_flag = assigned_War_Hero_general }
		}
		else_if = {
			limit = { 
				NOT = { EQS = { has_country_flag = assigned_grand_admiral } }
				is_navy_leader = yes
				is_advisor = yes
			}
			if = {
				limit = { is_character_slot = high_chiand } #order is important.
				add_trait = {
					slot = high_chiand
					trait = grand_admiral
				}
			}
			else_if = { 
				limit = { is_character_slot = navy_chief }
				add_trait = {
					slot = navy_chief
					trait = grand_admiral
				}
			}
			else_if = { 
				limit = { is_character_slot = political_advisor }
				add_trait = {
					slot = political_advisor
					trait = grand_admiral
				}
			}
			else_if = { 
				limit = { is_character_slot = theorist }
				add_trait = {
					slot = theorist
					trait = grand_admiral
				}
			}
			EQS = { set_country_flag = assigned_grand_admiral }
		}
		else_if = {
			limit = { has_trait = war_hero_general }
			if = {
				limit = { is_character_slot = political_advisor }
				add_trait = {
					slot = political_advisor
					trait = war_hero_grunt
				}
			}
			else_if = { 
				limit = { is_character_slot = high_chiand }
				add_trait = {
					slot = high_chiand
					trait = war_hero_grunt
				}
			}
			else_if = { 
				limit = { is_character_slot = army_chief }
				add_trait = {
					slot = army_chief
					trait = war_hero_grunt
				}
			}
			else_if = { 
				limit = { is_character_slot = theorist }
				add_trait = {
					slot = theorist
					trait = war_hero_grunt
				}
			}
			else = {
				add_trait = {
					slot = air_chief
					trait = war_hero_grunt
				}
			}
		}
		#else = { add_stab = 5 }
	}
}

bac_eqs_popularity = {
	if = {
		limit = { EQS = { is_EQS_SOL = no } }
		add_popularity = {
			ideology = democratic
			popularity = 0.033
		}
	}
	else = {
		add_popularity = {
			ideology = fascism
			popularity = 0.033
		}
	}
}

#Strengthening WPU
bac_COT_small_effect = {
	#set_temp_variable = { bac_size_var = bac_size_small_var }
	if = {
		limit = { has_any_power_balance = yes }
		#Sucks but atm add power balance doesn't accept variables
		add_power_balance_value = {
			id = BAC_commonalty_bop
			value = 0.033
			tooltip_side = commonalty_harmonic_control
		}
	}
	#bac_add_COT_effect = yes
}
bac_COT_medium_effect = {
	#set_temp_variable = { bac_size_var = bac_size_medium_var }
	if = {
		limit = { has_any_power_balance = yes }
		#Sucks but atm add power balance doesn't accept variables
		add_power_balance_value = {
			id = BAC_commonalty_bop
			value = 0.099
			tooltip_side = commonalty_harmonic_control
		}
	}
	#bac_add_COT_effect = yes
}
bac_COT_large_effect = {
	#set_temp_variable = { bac_size_var = bac_size_large_var }
	if = {
		limit = { has_any_power_balance = yes }
		#Sucks but atm add power balance doesn't accept variables
		add_power_balance_value = {
			id = BAC_commonalty_bop
			value = 0.21
			tooltip_side = commonalty_harmonic_control
		}
	}
	#bac_add_COT_effect = yes
}
bac_COT_mega_effect = {
	#set_temp_variable = { bac_size_var = bac_size_mega_var }
	if = {
		limit = { has_any_power_balance = yes }
		#Sucks but atm add power balance doesn't accept variables
		add_power_balance_value = {
			id = BAC_commonalty_bop
			value = 0.333
			tooltip_side = commonalty_harmonic_control
		}
	}
	#bac_add_COT_effect = yes
}
#bac_COT_giga_effect = {
#	#set_temp_variable = { bac_size_var = bac_size_giga_var }
#	if = {
#		limit = { has_any_power_balance = yes }
		#Sucks but atm add power balance doesn't accept variables
#		add_power_balance_value = {
#			id = BAC_commonalty_bop
#			value = 0.50
#			tooltip_side = commonalty_harmonic_control
#		}
#	}
#	#bac_add_COT_effect = yes
#}
#Strengthening PAC
# bac_add_WPU_effect = {
# 	if = {
# 		limit = { bac_Song_victory_trigger = no }
# 		add_popularity = {
# 			ideology = social_democrat
# 			popularity = var:bac_size_var
# 		}
# 	}
# 	else = {
# 		add_popularity = {
# 			ideology = radical_socialist
# 			popularity = var:bac_size_var
# 		}
# 	}
# }
bac_WPU_small_effect = {
	if = {
		limit = { has_any_power_balance = yes }
		#Sucks but atm add power balance doesn't accept variables
		add_power_balance_value = {
			id = BAC_commonalty_bop
			value = -0.033
			tooltip_side = commonalty_communal_control
		}
	}
	#set_temp_variable = { bac_size_var = bac_size_small_var }
	#bac_add_WPU_effect = yes
}
bac_WPU_medium_effect = {
	if = {
		limit = { has_any_power_balance = yes }
		#Sucks but atm add power balance doesn't accept variables
		add_power_balance_value = {
			id = BAC_commonalty_bop
			value = -0.099
			tooltip_side = commonalty_communal_control
		}
	}
	#set_temp_variable = { bac_size_var = bac_size_medium_var }
	#bac_add_WPU_effect = yes
}
bac_WPU_large_effect = {
	if = {
		limit = { has_any_power_balance = yes }
		#Sucks but atm add power balance doesn't accept variables
		add_power_balance_value = {
			id = BAC_commonalty_bop
			value = -0.21
			tooltip_side = commonalty_communal_control
		}
	}
	#set_temp_variable = { bac_size_var = bac_size_large_var }
	#bac_add_WPU_effect = yes
}
bac_WPU_mega_effect = {
	if = {
		limit = { has_any_power_balance = yes }
		#Sucks but atm add power balance doesn't accept variables
		add_power_balance_value = {
			id = BAC_commonalty_bop
			value = -0.333
			tooltip_side = commonalty_communal_control
		}
	}
	#set_temp_variable = { bac_size_var = bac_size_mega_var }
	#bac_add_WPU_effect = yes
}
#bac_WPU_giga_effect = {
#	if = {
#		limit = { has_any_power_balance = yes }
#		#Sucks but atm add power balance doesn't accept variables
#		add_power_balance_value = {
#			id = BAC_commonalty_bop
#			value = -0.50
#			tooltip_side = commonalty_communal_control
#		}
#	}
#	#set_temp_variable = { bac_size_var = bac_size_giga_var }
#	#bac_add_WPU_effect = yes
#}

TNO_BAC_Country_Closing_Screen_Show = {
	set_country_flag = TNO_BAC_Country_Closing_Screen_Visible
	set_variable = { CountryClosing_dirty = 0 }
	add_to_array = { CountryClosing_array_buttons = 2 }
	add_to_array = { CountryClosing_array_buttons = 1 }
}

TNO_BAC_Country_Closing_Screen_CreditsPages_Show = { # Add another "add_to_array = { CountryClosing_array_credits_pages = 1 }" in case you need another page of members
	clear_array = CountryClosing_array_credits_pages
	add_to_array = { CountryClosing_array_credits_pages = 2 }
	add_to_array = { CountryClosing_array_credits_pages = 1 }
}

TNO_BAC_Country_Closing_Screen_CreditsPages_Hide = {
	clear_array = CountryClosing_array_credits_pages
}

# default_party_popularity_stab_gain = {
# 	if = {
# 		limit = {
# 			NOT = {
# 				has_dynamic_modifier = { modifier = party_popularity_dynamic_modifier }
# 			}
# 		}
# 		clear_variable = stab_ideology
# 		hidden_effect = {
# 			if = {
# 				limit = {
# 					has_dynamic_modifier = { modifier = party_popularity_dynamic_modifier_ideology_mapped }
# 				}
# 				remove_dynamic_modifier = { modifier = party_popularity_dynamic_modifier_ideology_mapped }
# 			}
# 			add_dynamic_modifier = { modifier = party_popularity_dynamic_modifier }
# 		}
# 	}
# }

# map_party_popularity_stab_gain_to_ideology = {
# 	if = {
# 		limit = {
# 			NOT = {
# 				has_dynamic_modifier = { modifier = party_popularity_dynamic_modifier_ideology_mapped }
# 			}
# 		}
# 		hidden_effect = {
# 			if = {
# 				limit = {
# 					has_dynamic_modifier = { modifier = party_popularity_dynamic_modifier }
# 				}
# 				remove_dynamic_modifier = { modifier = party_popularity_dynamic_modifier }
# 			}
# 			add_dynamic_modifier = { modifier = party_popularity_dynamic_modifier_ideology_mapped }
# 		}
# 	}
# 	set_temp_variable = { coalition_partner_var = stab_ideology }
# 	remove_from_coalition = yes
# }

# disable_party_popularity_stab_gain = {
# 	if = {
# 		limit = {
# 			OR = {
# 				has_dynamic_modifier = { modifier = party_popularity_dynamic_modifier }
# 				has_dynamic_modifier = { modifier = party_popularity_dynamic_modifier_ideology_mapped }
# 			}
# 		}
# 		clear_variable = stab_ideology
# 		hidden_effect = {
# 			if = {
# 				limit = {
# 					has_dynamic_modifier = { modifier = party_popularity_dynamic_modifier }
# 				}
# 				remove_dynamic_modifier = { modifier = party_popularity_dynamic_modifier }
# 			}
# 			if = {
# 				limit = {
# 					has_dynamic_modifier = { modifier = party_popularity_dynamic_modifier_ideology_mapped }
# 				}
# 				remove_dynamic_modifier = { modifier = party_popularity_dynamic_modifier_ideology_mapped }
# 			}
# 		}
# 	}
# }

add_to_coalition = {
	# if = {
	# 	limit = {
	# 		NOT = {
	# 			#check_variable = { stab_ideology = coalition_partner_var }
	# 			is_in_array = { coalition_partners = coalition_partner_var }
	# 		}
	# 	}
	# 	custom_effect_tooltip = add_to_coalition
	# }
	if = {
		limit = {
			NOT = {
				#check_variable = { stab_ideology = coalition_partner_var }
				is_in_array = { coalition_partners = coalition_partner_var }
				#AND = {
					has_government = var:coalition_partner_var
					#has_dynamic_modifier = { modifier = party_popularity_dynamic_modifier }
				#}
			}
		}
		custom_effect_tooltip = add_to_coalition #added from if block above
		set_variable = { is_in_coalition_with_@var:coalition_partner_var = 1 }
		add_to_array = { coalition_partners = coalition_partner_var }
		hidden_effect = {
			if = {
				limit = {
					NOT = {
						has_dynamic_modifier = { modifier = party_popularity_dynamic_modifier_coalition }
					}
				}
				add_dynamic_modifier = { modifier = party_popularity_dynamic_modifier_coalition }
			}
		}
		set_temp_variable = { get_temp_stab = party_popularity@var:coalition_partner_var }
		multiply_temp_variable = { get_temp_stab = 0.15 }
		add_to_variable = { coalition_stab_gain = get_temp_stab }
	}
}

remove_from_coalition = {
	if = {
		limit = {
			is_in_array = { coalition_partners = coalition_partner_var }
		}
		custom_effect_tooltip = remove_from_coalition
		hidden_effect = {
			clear_variable = is_in_coalition_with_@var:coalition_partner_var
			if = {
				limit = {
					has_dynamic_modifier = { modifier = party_popularity_dynamic_modifier_coalition }
					check_variable = { coalition_partners^num = 1 }
				}
				remove_dynamic_modifier = { modifier = party_popularity_dynamic_modifier_coalition }
				clear_variable = coalition_stab_gain
				clear_array = coalition_partners
			}
			else = {
				remove_from_array = { coalition_partners = coalition_partner_var }
				subtract_from_variable = { coalition_stab_gain = party_popularity@var:coalition_partner_var }
			}
		}
	}
}

end_coalition = {
	hidden_effect = {
		if = {
			limit = {
				has_dynamic_modifier = { modifier = party_popularity_dynamic_modifier_coalition }
			}
			remove_dynamic_modifier = { modifier = party_popularity_dynamic_modifier_coalition }
		}
	}
	clear_variable = coalition_stab_gain
	clear_array = coalition_partners

	clear_variable = is_in_coalition_with_@token:democratic
	clear_variable = is_in_coalition_with_@token:communism
	clear_variable = is_in_coalition_with_@token:fascism
	clear_variable = is_in_coalition_with_@token:neutrality
}

